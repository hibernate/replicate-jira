# General Quarkus config:
#
# So that we have /api prefix in all our REST paths:
quarkus.rest.path=/api
# Enable access logs, in particular to see if web hook is triggered:
quarkus.http.access-log.enabled=true
quarkus.log.category."io.quarkus.http.access-log".level=INFO
# Management endpoints:
quarkus.management.enabled=true
quarkus.management.auth.basic=true
quarkus.management.auth.permission.sync.policy=authenticated
quarkus.management.auth.permission.sync.paths=/q/sync/*
quarkus.management.auth.permission.health.policy=permit
quarkus.management.auth.permission.health.paths=/q/health/*
#
# Basic security for management:
quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.plain-text=true
quarkus.security.users.embedded.users."management-user"=${MANAGEMENT_USER_PASSWORD:not-a-password}
#
# Scheduler:
# >> By default, the scheduler is not started unless a @Scheduled business method is found.
# >> You may need to force the start of the scheduler for "pure" programmatic scheduling via quarkus.scheduler.start-mode=forced
quarkus.scheduler.start-mode=forced
#
##############
# Deploy to OpenShift
#
quarkus.container-image.builder=jib
quarkus.openshift.part-of=replicate-jira
# Renew the SSL certificate automatically
# This requires an additional controller to run on the OpenShift cluster (in our case it does).
# See https://github.com/tnozicka/openshift-acme/#enabling-acme-certificates-for-your-object
quarkus.openshift.annotations."kubernetes.io/tls-acme"=true
quarkus.openshift.env.configmaps=replicate-jira-config,replicate-jira-hibernate-config
quarkus.openshift.env.secrets=replicate-jira-secrets
quarkus.openshift.mounts.app-config.path=/home/jboss/config
quarkus.openshift.config-map-volumes.app-config.config-map-name=replicate-jira-hibernate-config
# Resource requirements
quarkus.openshift.resources.limits.cpu=1000m
quarkus.openshift.resources.requests.cpu=400m
quarkus.openshift.resources.limits.memory=500Mi
quarkus.openshift.resources.requests.memory=250Mi
quarkus.openshift.startup-probe.initial-delay=15S
quarkus.openshift.startup-probe.period=15S
quarkus.openshift.startup-probe.failure-threshold=48
# Declare the management port on the service
quarkus.openshift.ports."management".container-port=9000
quarkus.openshift.ports."management".host-port=90
# Routes:
# we disable routes in the build and add them manually, since setting path is currently unavailable.
# See README for details on adding a route.
quarkus.openshift.route.expose=false

## Route TLS configuration:
quarkus.openshift.route.tls.termination=edge
quarkus.openshift.route.tls.insecure-edge-termination-policy=Redirect
# Don't use the version in (service) selectors,
# otherwise a rollback to an earlier version (due to failing startup) makes the service unavailable
quarkus.openshift.add-version-to-label-selectors=false
quarkus.helm.values."resources.limits.cpu".paths=(kind == Deployment).spec.template.spec.containers.resources.limits.cpu
quarkus.helm.values."resources.requests.cpu".paths=(kind == Deployment).spec.template.spec.containers.resources.requests.cpu
quarkus.helm.values."resources.limits.memory".paths=(kind == Deployment).spec.template.spec.containers.resources.limits.memory
quarkus.helm.values."resources.requests.memory".paths=(kind == Deployment).spec.template.spec.containers.resources.requests.memory
#
# General Helm config
#
# Don't just add any random system property mentioned in application.properties to values.yaml...
# We don't need it but more importantly it doesn't work (leads to marshalling errors)
# for strings that look like numbers (e.g. 2.11)
quarkus.helm.map-system-properties=false
# Set common k8s labels everywhere, even on OpenSearch resources
quarkus.helm.values."version".paths=metadata.labels.'app.kubernetes.io/version',spec.template.metadata.labels.'app.kubernetes.io/version'
quarkus.helm.values."version".property=@.app.version
quarkus.helm.values."version".value=${maven.revision}
quarkus.helm.values."part-of".paths=metadata.labels.'app.kubernetes.io/part-of',spec.template.metadata.labels.'app.kubernetes.io/part-of'
quarkus.helm.values."part-of".property=@.app.name
quarkus.helm.values."part-of".value=replicate-jira
